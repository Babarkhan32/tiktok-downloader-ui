import React from "react";
import Head from "next/head";
import { Inter } from "@next/font/google";
import styles from "../styles/Home.module.css";
const inter = Inter({ subsets: ["latin"] });
import useDownloader from "react-use-downloader";
import { ToastContainer, toast } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";
export default function Home() {
  const [url, setUrl] = React.useState("");
  const [loading, setLoading] = React.useState(false);
  const { size, elapsed, percentage, download, cancel, error, isInProgress } =
    useDownloader();
  const downloadVideo = async (videoUrl: string) => {
    try {
      if (!videoUrl.includes("www.tiktok.com")) {
        return toast("Please provide non-empty and tiktok urls only");
      }
      setLoading(true);
      let response = await fetch("https://beige-dugong-toga.cyclic.app/video", {
        method: "POST", // *GET, POST, PUT, DELETE, etc.
        // mode: 'cors', // no-cors, *cors, same-origin
        cache: "no-cache", // *default, no-cache, reload, force-cache, only-if-cached
        credentials: "same-origin", // include, *same-origin, omit
        headers: {
          "Content-Type": "application/json",
          // 'Content-Type': 'application/x-www-form-urlencoded',
        },
        redirect: "follow", // manual, *follow, error
        referrerPolicy: "no-referrer", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url
        body: JSON.stringify({ videoUrl }), // body data type must match "Content-Type" header
      });
      response = await response.json();
      await download(response.data, Date.now() + "_video.mp4");

      // let delVid = await fetch("http://localhost:8000/delete-video", {
      //   method: "DELETE", // *GET, POST, PUT, DELETE, etc.
      //   // mode: 'cors', // no-cors, *cors, same-origin
      //   cache: "no-cache", // *default, no-cache, reload, force-cache, only-if-cached
      //   credentials: "same-origin", // include, *same-origin, omit
      //   headers: {
      //     "Content-Type": "application/json",
      //     // 'Content-Type': 'application/x-www-form-urlencoded',
      //   },
      //   redirect: "follow", // manual, *follow, error
      //   referrerPolicy: "no-referrer", // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url
      //   body: JSON.stringify({ fileName: response.data.split("/")[3] }), // body data type must match "Content-Type" header
      // });
    } catch (error) {
      console.log("Error while fetching video", error);
      toast.error("Something went wrong");
    }
    setLoading(false);
  };

  return (
    <>
      <ToastContainer />
      <Head>
        <title>Tik-Tok downloader</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.description}>
          <p>Get started by pasting tiktok url in the text field&nbsp;</p>
          <div>
            <a target="_blank" rel="noopener noreferrer"></a>
          </div>
        </div>

        <input
          onChange={(e) => setUrl(e.target.value)}
          style={{ width: "100%", padding: "1%", border: "none" }}
        />

        <button
          disabled={loading}
          onClick={() => downloadVideo(url)}
          className={styles.thirteen}
        >
          {!loading ? <p>Download</p> : <p>Downloading.....</p>}
        </button>
        {loading && <progress id="file" value={percentage} max="100" />}

        <div className={styles.grid}>
          <a className={styles.card} target="_blank" rel="noopener noreferrer">
            <h2 className={inter.className}>
              No water mark <span>-&gt;</span>
            </h2>
            <p className={inter.className}>
              Download tik-tok with no water mark attached
            </p>
          </a>
        </div>
      </main>
    </>
  );
}
